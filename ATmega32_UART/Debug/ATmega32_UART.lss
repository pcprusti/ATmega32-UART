
ATmega32_UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000082a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000038  00800060  0000082a  000008be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000032  00800098  00800098  000008f6  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001fe  00000000  00000000  0000157c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000177a  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000c0  00000000  00000000  000017a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000d50  00000000  00000000  00001869  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000006b9  00000000  00000000  000025b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000008fe  00000000  00000000  00002c72  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000168  00000000  00000000  00003570  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000375  00000000  00000000  000036d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000081c  00000000  00000000  00003a4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000070  00000000  00000000  00004269  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e2       	ldi	r30, 0x2A	; 42
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 39       	cpi	r26, 0x98	; 152
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e9       	ldi	r26, 0x98	; 152
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 3c       	cpi	r26, 0xCA	; 202
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 13 04 	jmp	0x826	; 0x826 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "defs.h"
#include "uart.h"


int main() 
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	64 97       	sbiw	r28, 0x14	; 20
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
	uint32_t cnt = 0;
	char buff[20] = {0};
  a6:	fe 01       	movw	r30, r28
  a8:	31 96       	adiw	r30, 0x01	; 1
  aa:	84 e1       	ldi	r24, 0x14	; 20
  ac:	df 01       	movw	r26, r30
  ae:	1d 92       	st	X+, r1
  b0:	8a 95       	dec	r24
  b2:	e9 f7       	brne	.-6      	; 0xae <main+0x1c>
	char* rcvstr = NULL;
	UART_Init(9600);
  b4:	60 e8       	ldi	r22, 0x80	; 128
  b6:	75 e2       	ldi	r23, 0x25	; 37
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	0e 94 ad 00 	call	0x15a	; 0x15a <UART_Init>
	
	UART_Send_String("UART DEMO \r\n");
  c0:	80 e6       	ldi	r24, 0x60	; 96
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_Send_String>
#include "uart.h"


int main() 
{
	uint32_t cnt = 0;
  c8:	81 2c       	mov	r8, r1
  ca:	91 2c       	mov	r9, r1
  cc:	54 01       	movw	r10, r8
	UART_Send_String("UART DEMO \r\n");
	
	while (1)
	{
		cnt ++;
		sprintf(buff,"Counter = %ld\r\n",cnt);
  ce:	0f 2e       	mov	r0, r31
  d0:	fd e6       	ldi	r31, 0x6D	; 109
  d2:	ef 2e       	mov	r14, r31
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	ff 2e       	mov	r15, r31
  d8:	f0 2d       	mov	r31, r0
  da:	8e 01       	movw	r16, r28
  dc:	0f 5f       	subi	r16, 0xFF	; 255
  de:	1f 4f       	sbci	r17, 0xFF	; 255
		UART_Send_String(buff);
		memset(buff, 0, 20);
  e0:	0f 2e       	mov	r0, r31
  e2:	f4 e1       	ldi	r31, 0x14	; 20
  e4:	7f 2e       	mov	r7, r31
  e6:	f0 2d       	mov	r31, r0
	
	UART_Send_String("UART DEMO \r\n");
	
	while (1)
	{
		cnt ++;
  e8:	bf ef       	ldi	r27, 0xFF	; 255
  ea:	8b 1a       	sub	r8, r27
  ec:	9b 0a       	sbc	r9, r27
  ee:	ab 0a       	sbc	r10, r27
  f0:	bb 0a       	sbc	r11, r27
		sprintf(buff,"Counter = %ld\r\n",cnt);
  f2:	bf 92       	push	r11
  f4:	af 92       	push	r10
  f6:	9f 92       	push	r9
  f8:	8f 92       	push	r8
  fa:	ff 92       	push	r15
  fc:	ef 92       	push	r14
  fe:	1f 93       	push	r17
 100:	0f 93       	push	r16
 102:	0e 94 3e 01 	call	0x27c	; 0x27c <sprintf>
		UART_Send_String(buff);
 106:	c8 01       	movw	r24, r16
 108:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_Send_String>
		memset(buff, 0, 20);
 10c:	f8 01       	movw	r30, r16
 10e:	27 2d       	mov	r18, r7
 110:	11 92       	st	Z+, r1
 112:	2a 95       	dec	r18
 114:	e9 f7       	brne	.-6      	; 0x110 <main+0x7e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	99 e6       	ldi	r25, 0x69	; 105
 11a:	a8 e1       	ldi	r26, 0x18	; 24
 11c:	81 50       	subi	r24, 0x01	; 1
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	a0 40       	sbci	r26, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <main+0x8a>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x94>
 126:	00 00       	nop
		_delay_ms(1000);
		UART_Send_String("Enter a string:\r\n");
 128:	8d e7       	ldi	r24, 0x7D	; 125
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_Send_String>
		rcvstr = (char*) UART_Receive_String(FALSE);
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <UART_Receive_String>
 136:	6c 01       	movw	r12, r24
		UART_Send_String("string: ");
 138:	8f e8       	ldi	r24, 0x8F	; 143
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_Send_String>
		UART_Send_String(rcvstr);
 140:	c6 01       	movw	r24, r12
 142:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_Send_String>
		UART_Send_String("\r\n");
 146:	8a e6       	ldi	r24, 0x6A	; 106
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_Send_String>
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	f8 94       	cli
 152:	de bf       	out	0x3e, r29	; 62
 154:	0f be       	out	0x3f, r0	; 63
 156:	cd bf       	out	0x3d, r28	; 61
 158:	c7 cf       	rjmp	.-114    	; 0xe8 <main+0x56>

0000015a <UART_Init>:

char rxbuff[50];

void UART_Init(uint32_t baud_rate)
{
	UBRRL = UBRR(baud_rate);			/* Load lower 8-bits of the baud rate value */
 15a:	dc 01       	movw	r26, r24
 15c:	cb 01       	movw	r24, r22
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	aa 1f       	adc	r26, r26
 164:	bb 1f       	adc	r27, r27
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	aa 1f       	adc	r26, r26
 16c:	bb 1f       	adc	r27, r27
 16e:	9c 01       	movw	r18, r24
 170:	ad 01       	movw	r20, r26
 172:	22 0f       	add	r18, r18
 174:	33 1f       	adc	r19, r19
 176:	44 1f       	adc	r20, r20
 178:	55 1f       	adc	r21, r21
 17a:	22 0f       	add	r18, r18
 17c:	33 1f       	adc	r19, r19
 17e:	44 1f       	adc	r20, r20
 180:	55 1f       	adc	r21, r21
 182:	60 e0       	ldi	r22, 0x00	; 0
 184:	72 e1       	ldi	r23, 0x12	; 18
 186:	8a e7       	ldi	r24, 0x7A	; 122
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	0e 94 1c 01 	call	0x238	; 0x238 <__udivmodsi4>
 18e:	82 2f       	mov	r24, r18
 190:	81 50       	subi	r24, 0x01	; 1
 192:	89 b9       	out	0x09, r24	; 9
	UBRRH = (UBRR(baud_rate) >> 8);	/* Load upper 8-bits*/
 194:	da 01       	movw	r26, r20
 196:	c9 01       	movw	r24, r18
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	a1 09       	sbc	r26, r1
 19c:	b1 09       	sbc	r27, r1
 19e:	89 2f       	mov	r24, r25
 1a0:	9a 2f       	mov	r25, r26
 1a2:	ab 2f       	mov	r26, r27
 1a4:	bb 27       	eor	r27, r27
 1a6:	80 bd       	out	0x20, r24	; 32
	UCSRB |= (1 << RXEN) | (1 << TXEN);			/* Turn on transmission and reception */
 1a8:	8a b1       	in	r24, 0x0a	; 10
 1aa:	88 61       	ori	r24, 0x18	; 24
 1ac:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1<<URSEL) | (1 << UCSZ0) | (1 << UCSZ1);		/* Use 8-bit character sizes */
 1ae:	80 b5       	in	r24, 0x20	; 32
 1b0:	86 68       	ori	r24, 0x86	; 134
 1b2:	80 bd       	out	0x20, r24	; 32
 1b4:	08 95       	ret

000001b6 <UART_Receive>:
	
}

uint8_t UART_Receive()
{
	while ((UCSRA & (1 << RXC)) == 0);			/* Wait till data is received */
 1b6:	5f 9b       	sbis	0x0b, 7	; 11
 1b8:	fe cf       	rjmp	.-4      	; 0x1b6 <UART_Receive>
	return(UDR);								/* Return the byte*/
 1ba:	8c b1       	in	r24, 0x0c	; 12
}
 1bc:	08 95       	ret

000001be <UART_Transmit>:

void UART_Transmit(uint8_t ch)
{
	while (! (UCSRA & (1<<UDRE)));				/* Wait for empty transmit buffer*/
 1be:	5d 9b       	sbis	0x0b, 5	; 11
 1c0:	fe cf       	rjmp	.-4      	; 0x1be <UART_Transmit>
	UDR = ch ;
 1c2:	8c b9       	out	0x0c, r24	; 12
 1c4:	08 95       	ret

000001c6 <UART_Send_String>:
}

void UART_Send_String(char *str)
{
 1c6:	cf 93       	push	r28
 1c8:	df 93       	push	r29
 1ca:	ec 01       	movw	r28, r24
	while (NULL != (*str))						/* Send string till null */
 1cc:	88 81       	ld	r24, Y
 1ce:	88 23       	and	r24, r24
 1d0:	31 f0       	breq	.+12     	; 0x1de <UART_Send_String+0x18>
{
	while (! (UCSRA & (1<<UDRE)));				/* Wait for empty transmit buffer*/
	UDR = ch ;
}

void UART_Send_String(char *str)
 1d2:	21 96       	adiw	r28, 0x01	; 1
{
	while (NULL != (*str))						/* Send string till null */
	{
		UART_Transmit(*(str++));
 1d4:	0e 94 df 00 	call	0x1be	; 0x1be <UART_Transmit>
	UDR = ch ;
}

void UART_Send_String(char *str)
{
	while (NULL != (*str))						/* Send string till null */
 1d8:	89 91       	ld	r24, Y+
 1da:	81 11       	cpse	r24, r1
 1dc:	fb cf       	rjmp	.-10     	; 0x1d4 <UART_Send_String+0xe>
	{
		UART_Transmit(*(str++));
	}
}
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	08 95       	ret

000001e4 <UART_Receive_String>:

char* UART_Receive_String(uint8_t en_echo)
{
 1e4:	1f 93       	push	r17
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	18 2f       	mov	r17, r24
	char data = UART_Receive();
 1ec:	0e 94 db 00 	call	0x1b6	; 0x1b6 <UART_Receive>
 1f0:	c8 2f       	mov	r28, r24
	
	if(TRUE == en_echo)
 1f2:	11 30       	cpi	r17, 0x01	; 1
 1f4:	11 f4       	brne	.+4      	; 0x1fa <UART_Receive_String+0x16>
	{
		UART_Transmit(data);
 1f6:	0e 94 df 00 	call	0x1be	; 0x1be <UART_Transmit>
	}
	
	uint8_t counter = 0;
	
	while(data != '\r')
 1fa:	cd 30       	cpi	r28, 0x0D	; 13
 1fc:	89 f0       	breq	.+34     	; 0x220 <UART_Receive_String+0x3c>
 1fe:	d0 e0       	ldi	r29, 0x00	; 0
	{
		rxbuff[counter] = data;
 200:	ed 2f       	mov	r30, r29
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	e8 56       	subi	r30, 0x68	; 104
 206:	ff 4f       	sbci	r31, 0xFF	; 255
 208:	c0 83       	st	Z, r28
		data = UART_Receive();
 20a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <UART_Receive>
 20e:	c8 2f       	mov	r28, r24
		if(TRUE == en_echo)
 210:	11 30       	cpi	r17, 0x01	; 1
 212:	11 f4       	brne	.+4      	; 0x218 <UART_Receive_String+0x34>
		{
			UART_Transmit(data);
 214:	0e 94 df 00 	call	0x1be	; 0x1be <UART_Transmit>
		}
		counter++;
 218:	df 5f       	subi	r29, 0xFF	; 255
		UART_Transmit(data);
	}
	
	uint8_t counter = 0;
	
	while(data != '\r')
 21a:	cd 30       	cpi	r28, 0x0D	; 13
 21c:	89 f7       	brne	.-30     	; 0x200 <UART_Receive_String+0x1c>
 21e:	01 c0       	rjmp	.+2      	; 0x222 <UART_Receive_String+0x3e>
 220:	d0 e0       	ldi	r29, 0x00	; 0
			UART_Transmit(data);
		}
		counter++;
	}
	
	rxbuff[counter] = '\0';
 222:	ed 2f       	mov	r30, r29
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	e8 56       	subi	r30, 0x68	; 104
 228:	ff 4f       	sbci	r31, 0xFF	; 255
 22a:	10 82       	st	Z, r1
	counter = 0;
	return rxbuff;
}
 22c:	88 e9       	ldi	r24, 0x98	; 152
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	df 91       	pop	r29
 232:	cf 91       	pop	r28
 234:	1f 91       	pop	r17
 236:	08 95       	ret

00000238 <__udivmodsi4>:
 238:	a1 e2       	ldi	r26, 0x21	; 33
 23a:	1a 2e       	mov	r1, r26
 23c:	aa 1b       	sub	r26, r26
 23e:	bb 1b       	sub	r27, r27
 240:	fd 01       	movw	r30, r26
 242:	0d c0       	rjmp	.+26     	; 0x25e <__udivmodsi4_ep>

00000244 <__udivmodsi4_loop>:
 244:	aa 1f       	adc	r26, r26
 246:	bb 1f       	adc	r27, r27
 248:	ee 1f       	adc	r30, r30
 24a:	ff 1f       	adc	r31, r31
 24c:	a2 17       	cp	r26, r18
 24e:	b3 07       	cpc	r27, r19
 250:	e4 07       	cpc	r30, r20
 252:	f5 07       	cpc	r31, r21
 254:	20 f0       	brcs	.+8      	; 0x25e <__udivmodsi4_ep>
 256:	a2 1b       	sub	r26, r18
 258:	b3 0b       	sbc	r27, r19
 25a:	e4 0b       	sbc	r30, r20
 25c:	f5 0b       	sbc	r31, r21

0000025e <__udivmodsi4_ep>:
 25e:	66 1f       	adc	r22, r22
 260:	77 1f       	adc	r23, r23
 262:	88 1f       	adc	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	1a 94       	dec	r1
 268:	69 f7       	brne	.-38     	; 0x244 <__udivmodsi4_loop>
 26a:	60 95       	com	r22
 26c:	70 95       	com	r23
 26e:	80 95       	com	r24
 270:	90 95       	com	r25
 272:	9b 01       	movw	r18, r22
 274:	ac 01       	movw	r20, r24
 276:	bd 01       	movw	r22, r26
 278:	cf 01       	movw	r24, r30
 27a:	08 95       	ret

0000027c <sprintf>:
 27c:	ae e0       	ldi	r26, 0x0E	; 14
 27e:	b0 e0       	ldi	r27, 0x00	; 0
 280:	e4 e4       	ldi	r30, 0x44	; 68
 282:	f1 e0       	ldi	r31, 0x01	; 1
 284:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__prologue_saves__+0x1c>
 288:	0d 89       	ldd	r16, Y+21	; 0x15
 28a:	1e 89       	ldd	r17, Y+22	; 0x16
 28c:	86 e0       	ldi	r24, 0x06	; 6
 28e:	8c 83       	std	Y+4, r24	; 0x04
 290:	1a 83       	std	Y+2, r17	; 0x02
 292:	09 83       	std	Y+1, r16	; 0x01
 294:	8f ef       	ldi	r24, 0xFF	; 255
 296:	9f e7       	ldi	r25, 0x7F	; 127
 298:	9e 83       	std	Y+6, r25	; 0x06
 29a:	8d 83       	std	Y+5, r24	; 0x05
 29c:	ce 01       	movw	r24, r28
 29e:	49 96       	adiw	r24, 0x19	; 25
 2a0:	ac 01       	movw	r20, r24
 2a2:	6f 89       	ldd	r22, Y+23	; 0x17
 2a4:	78 8d       	ldd	r23, Y+24	; 0x18
 2a6:	ce 01       	movw	r24, r28
 2a8:	01 96       	adiw	r24, 0x01	; 1
 2aa:	0e 94 60 01 	call	0x2c0	; 0x2c0 <vfprintf>
 2ae:	ef 81       	ldd	r30, Y+7	; 0x07
 2b0:	f8 85       	ldd	r31, Y+8	; 0x08
 2b2:	e0 0f       	add	r30, r16
 2b4:	f1 1f       	adc	r31, r17
 2b6:	10 82       	st	Z, r1
 2b8:	2e 96       	adiw	r28, 0x0e	; 14
 2ba:	e4 e0       	ldi	r30, 0x04	; 4
 2bc:	0c 94 06 04 	jmp	0x80c	; 0x80c <__epilogue_restores__+0x1c>

000002c0 <vfprintf>:
 2c0:	ac e0       	ldi	r26, 0x0C	; 12
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	e6 e6       	ldi	r30, 0x66	; 102
 2c6:	f1 e0       	ldi	r31, 0x01	; 1
 2c8:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__prologue_saves__>
 2cc:	7c 01       	movw	r14, r24
 2ce:	6b 01       	movw	r12, r22
 2d0:	8a 01       	movw	r16, r20
 2d2:	fc 01       	movw	r30, r24
 2d4:	17 82       	std	Z+7, r1	; 0x07
 2d6:	16 82       	std	Z+6, r1	; 0x06
 2d8:	83 81       	ldd	r24, Z+3	; 0x03
 2da:	81 ff       	sbrs	r24, 1
 2dc:	c6 c1       	rjmp	.+908    	; 0x66a <vfprintf+0x3aa>
 2de:	88 24       	eor	r8, r8
 2e0:	83 94       	inc	r8
 2e2:	91 2c       	mov	r9, r1
 2e4:	8c 0e       	add	r8, r28
 2e6:	9d 1e       	adc	r9, r29
 2e8:	f7 01       	movw	r30, r14
 2ea:	93 81       	ldd	r25, Z+3	; 0x03
 2ec:	f6 01       	movw	r30, r12
 2ee:	93 fd       	sbrc	r25, 3
 2f0:	85 91       	lpm	r24, Z+
 2f2:	93 ff       	sbrs	r25, 3
 2f4:	81 91       	ld	r24, Z+
 2f6:	6f 01       	movw	r12, r30
 2f8:	88 23       	and	r24, r24
 2fa:	09 f4       	brne	.+2      	; 0x2fe <vfprintf+0x3e>
 2fc:	b2 c1       	rjmp	.+868    	; 0x662 <vfprintf+0x3a2>
 2fe:	85 32       	cpi	r24, 0x25	; 37
 300:	39 f4       	brne	.+14     	; 0x310 <vfprintf+0x50>
 302:	93 fd       	sbrc	r25, 3
 304:	85 91       	lpm	r24, Z+
 306:	93 ff       	sbrs	r25, 3
 308:	81 91       	ld	r24, Z+
 30a:	6f 01       	movw	r12, r30
 30c:	85 32       	cpi	r24, 0x25	; 37
 30e:	29 f4       	brne	.+10     	; 0x31a <vfprintf+0x5a>
 310:	b7 01       	movw	r22, r14
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 318:	e7 cf       	rjmp	.-50     	; 0x2e8 <vfprintf+0x28>
 31a:	51 2c       	mov	r5, r1
 31c:	31 2c       	mov	r3, r1
 31e:	20 e0       	ldi	r18, 0x00	; 0
 320:	20 32       	cpi	r18, 0x20	; 32
 322:	a8 f4       	brcc	.+42     	; 0x34e <vfprintf+0x8e>
 324:	8b 32       	cpi	r24, 0x2B	; 43
 326:	61 f0       	breq	.+24     	; 0x340 <vfprintf+0x80>
 328:	28 f4       	brcc	.+10     	; 0x334 <vfprintf+0x74>
 32a:	80 32       	cpi	r24, 0x20	; 32
 32c:	51 f0       	breq	.+20     	; 0x342 <vfprintf+0x82>
 32e:	83 32       	cpi	r24, 0x23	; 35
 330:	71 f4       	brne	.+28     	; 0x34e <vfprintf+0x8e>
 332:	0b c0       	rjmp	.+22     	; 0x34a <vfprintf+0x8a>
 334:	8d 32       	cpi	r24, 0x2D	; 45
 336:	39 f0       	breq	.+14     	; 0x346 <vfprintf+0x86>
 338:	80 33       	cpi	r24, 0x30	; 48
 33a:	49 f4       	brne	.+18     	; 0x34e <vfprintf+0x8e>
 33c:	21 60       	ori	r18, 0x01	; 1
 33e:	28 c0       	rjmp	.+80     	; 0x390 <vfprintf+0xd0>
 340:	22 60       	ori	r18, 0x02	; 2
 342:	24 60       	ori	r18, 0x04	; 4
 344:	25 c0       	rjmp	.+74     	; 0x390 <vfprintf+0xd0>
 346:	28 60       	ori	r18, 0x08	; 8
 348:	23 c0       	rjmp	.+70     	; 0x390 <vfprintf+0xd0>
 34a:	20 61       	ori	r18, 0x10	; 16
 34c:	21 c0       	rjmp	.+66     	; 0x390 <vfprintf+0xd0>
 34e:	27 fd       	sbrc	r18, 7
 350:	27 c0       	rjmp	.+78     	; 0x3a0 <vfprintf+0xe0>
 352:	38 2f       	mov	r19, r24
 354:	30 53       	subi	r19, 0x30	; 48
 356:	3a 30       	cpi	r19, 0x0A	; 10
 358:	78 f4       	brcc	.+30     	; 0x378 <vfprintf+0xb8>
 35a:	26 ff       	sbrs	r18, 6
 35c:	06 c0       	rjmp	.+12     	; 0x36a <vfprintf+0xaa>
 35e:	fa e0       	ldi	r31, 0x0A	; 10
 360:	5f 9e       	mul	r5, r31
 362:	30 0d       	add	r19, r0
 364:	11 24       	eor	r1, r1
 366:	53 2e       	mov	r5, r19
 368:	13 c0       	rjmp	.+38     	; 0x390 <vfprintf+0xd0>
 36a:	8a e0       	ldi	r24, 0x0A	; 10
 36c:	38 9e       	mul	r3, r24
 36e:	30 0d       	add	r19, r0
 370:	11 24       	eor	r1, r1
 372:	33 2e       	mov	r3, r19
 374:	20 62       	ori	r18, 0x20	; 32
 376:	0c c0       	rjmp	.+24     	; 0x390 <vfprintf+0xd0>
 378:	8e 32       	cpi	r24, 0x2E	; 46
 37a:	21 f4       	brne	.+8      	; 0x384 <vfprintf+0xc4>
 37c:	26 fd       	sbrc	r18, 6
 37e:	71 c1       	rjmp	.+738    	; 0x662 <vfprintf+0x3a2>
 380:	20 64       	ori	r18, 0x40	; 64
 382:	06 c0       	rjmp	.+12     	; 0x390 <vfprintf+0xd0>
 384:	8c 36       	cpi	r24, 0x6C	; 108
 386:	11 f4       	brne	.+4      	; 0x38c <vfprintf+0xcc>
 388:	20 68       	ori	r18, 0x80	; 128
 38a:	02 c0       	rjmp	.+4      	; 0x390 <vfprintf+0xd0>
 38c:	88 36       	cpi	r24, 0x68	; 104
 38e:	41 f4       	brne	.+16     	; 0x3a0 <vfprintf+0xe0>
 390:	f6 01       	movw	r30, r12
 392:	93 fd       	sbrc	r25, 3
 394:	85 91       	lpm	r24, Z+
 396:	93 ff       	sbrs	r25, 3
 398:	81 91       	ld	r24, Z+
 39a:	6f 01       	movw	r12, r30
 39c:	81 11       	cpse	r24, r1
 39e:	c0 cf       	rjmp	.-128    	; 0x320 <vfprintf+0x60>
 3a0:	98 2f       	mov	r25, r24
 3a2:	95 54       	subi	r25, 0x45	; 69
 3a4:	93 30       	cpi	r25, 0x03	; 3
 3a6:	18 f0       	brcs	.+6      	; 0x3ae <vfprintf+0xee>
 3a8:	90 52       	subi	r25, 0x20	; 32
 3aa:	93 30       	cpi	r25, 0x03	; 3
 3ac:	28 f4       	brcc	.+10     	; 0x3b8 <vfprintf+0xf8>
 3ae:	0c 5f       	subi	r16, 0xFC	; 252
 3b0:	1f 4f       	sbci	r17, 0xFF	; 255
 3b2:	ff e3       	ldi	r31, 0x3F	; 63
 3b4:	f9 83       	std	Y+1, r31	; 0x01
 3b6:	0d c0       	rjmp	.+26     	; 0x3d2 <vfprintf+0x112>
 3b8:	83 36       	cpi	r24, 0x63	; 99
 3ba:	31 f0       	breq	.+12     	; 0x3c8 <vfprintf+0x108>
 3bc:	83 37       	cpi	r24, 0x73	; 115
 3be:	71 f0       	breq	.+28     	; 0x3dc <vfprintf+0x11c>
 3c0:	83 35       	cpi	r24, 0x53	; 83
 3c2:	09 f0       	breq	.+2      	; 0x3c6 <vfprintf+0x106>
 3c4:	5e c0       	rjmp	.+188    	; 0x482 <vfprintf+0x1c2>
 3c6:	23 c0       	rjmp	.+70     	; 0x40e <vfprintf+0x14e>
 3c8:	f8 01       	movw	r30, r16
 3ca:	80 81       	ld	r24, Z
 3cc:	89 83       	std	Y+1, r24	; 0x01
 3ce:	0e 5f       	subi	r16, 0xFE	; 254
 3d0:	1f 4f       	sbci	r17, 0xFF	; 255
 3d2:	44 24       	eor	r4, r4
 3d4:	43 94       	inc	r4
 3d6:	51 2c       	mov	r5, r1
 3d8:	54 01       	movw	r10, r8
 3da:	15 c0       	rjmp	.+42     	; 0x406 <vfprintf+0x146>
 3dc:	38 01       	movw	r6, r16
 3de:	f2 e0       	ldi	r31, 0x02	; 2
 3e0:	6f 0e       	add	r6, r31
 3e2:	71 1c       	adc	r7, r1
 3e4:	f8 01       	movw	r30, r16
 3e6:	a0 80       	ld	r10, Z
 3e8:	b1 80       	ldd	r11, Z+1	; 0x01
 3ea:	26 ff       	sbrs	r18, 6
 3ec:	03 c0       	rjmp	.+6      	; 0x3f4 <vfprintf+0x134>
 3ee:	65 2d       	mov	r22, r5
 3f0:	70 e0       	ldi	r23, 0x00	; 0
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <vfprintf+0x138>
 3f4:	6f ef       	ldi	r22, 0xFF	; 255
 3f6:	7f ef       	ldi	r23, 0xFF	; 255
 3f8:	c5 01       	movw	r24, r10
 3fa:	2c 87       	std	Y+12, r18	; 0x0c
 3fc:	0e 94 47 03 	call	0x68e	; 0x68e <strnlen>
 400:	2c 01       	movw	r4, r24
 402:	83 01       	movw	r16, r6
 404:	2c 85       	ldd	r18, Y+12	; 0x0c
 406:	6f e7       	ldi	r22, 0x7F	; 127
 408:	26 2e       	mov	r2, r22
 40a:	22 22       	and	r2, r18
 40c:	18 c0       	rjmp	.+48     	; 0x43e <vfprintf+0x17e>
 40e:	38 01       	movw	r6, r16
 410:	f2 e0       	ldi	r31, 0x02	; 2
 412:	6f 0e       	add	r6, r31
 414:	71 1c       	adc	r7, r1
 416:	f8 01       	movw	r30, r16
 418:	a0 80       	ld	r10, Z
 41a:	b1 80       	ldd	r11, Z+1	; 0x01
 41c:	26 ff       	sbrs	r18, 6
 41e:	03 c0       	rjmp	.+6      	; 0x426 <vfprintf+0x166>
 420:	65 2d       	mov	r22, r5
 422:	70 e0       	ldi	r23, 0x00	; 0
 424:	02 c0       	rjmp	.+4      	; 0x42a <vfprintf+0x16a>
 426:	6f ef       	ldi	r22, 0xFF	; 255
 428:	7f ef       	ldi	r23, 0xFF	; 255
 42a:	c5 01       	movw	r24, r10
 42c:	2c 87       	std	Y+12, r18	; 0x0c
 42e:	0e 94 3c 03 	call	0x678	; 0x678 <strnlen_P>
 432:	2c 01       	movw	r4, r24
 434:	2c 85       	ldd	r18, Y+12	; 0x0c
 436:	50 e8       	ldi	r21, 0x80	; 128
 438:	25 2e       	mov	r2, r21
 43a:	22 2a       	or	r2, r18
 43c:	83 01       	movw	r16, r6
 43e:	23 fc       	sbrc	r2, 3
 440:	1c c0       	rjmp	.+56     	; 0x47a <vfprintf+0x1ba>
 442:	06 c0       	rjmp	.+12     	; 0x450 <vfprintf+0x190>
 444:	b7 01       	movw	r22, r14
 446:	80 e2       	ldi	r24, 0x20	; 32
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 44e:	3a 94       	dec	r3
 450:	83 2d       	mov	r24, r3
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	48 16       	cp	r4, r24
 456:	59 06       	cpc	r5, r25
 458:	a8 f3       	brcs	.-22     	; 0x444 <vfprintf+0x184>
 45a:	0f c0       	rjmp	.+30     	; 0x47a <vfprintf+0x1ba>
 45c:	f5 01       	movw	r30, r10
 45e:	27 fc       	sbrc	r2, 7
 460:	85 91       	lpm	r24, Z+
 462:	27 fe       	sbrs	r2, 7
 464:	81 91       	ld	r24, Z+
 466:	5f 01       	movw	r10, r30
 468:	b7 01       	movw	r22, r14
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 470:	31 10       	cpse	r3, r1
 472:	3a 94       	dec	r3
 474:	f1 e0       	ldi	r31, 0x01	; 1
 476:	4f 1a       	sub	r4, r31
 478:	51 08       	sbc	r5, r1
 47a:	41 14       	cp	r4, r1
 47c:	51 04       	cpc	r5, r1
 47e:	71 f7       	brne	.-36     	; 0x45c <vfprintf+0x19c>
 480:	ed c0       	rjmp	.+474    	; 0x65c <vfprintf+0x39c>
 482:	84 36       	cpi	r24, 0x64	; 100
 484:	11 f0       	breq	.+4      	; 0x48a <vfprintf+0x1ca>
 486:	89 36       	cpi	r24, 0x69	; 105
 488:	41 f5       	brne	.+80     	; 0x4da <vfprintf+0x21a>
 48a:	f8 01       	movw	r30, r16
 48c:	27 ff       	sbrs	r18, 7
 48e:	07 c0       	rjmp	.+14     	; 0x49e <vfprintf+0x1de>
 490:	60 81       	ld	r22, Z
 492:	71 81       	ldd	r23, Z+1	; 0x01
 494:	82 81       	ldd	r24, Z+2	; 0x02
 496:	93 81       	ldd	r25, Z+3	; 0x03
 498:	0c 5f       	subi	r16, 0xFC	; 252
 49a:	1f 4f       	sbci	r17, 0xFF	; 255
 49c:	08 c0       	rjmp	.+16     	; 0x4ae <vfprintf+0x1ee>
 49e:	60 81       	ld	r22, Z
 4a0:	71 81       	ldd	r23, Z+1	; 0x01
 4a2:	88 27       	eor	r24, r24
 4a4:	77 fd       	sbrc	r23, 7
 4a6:	80 95       	com	r24
 4a8:	98 2f       	mov	r25, r24
 4aa:	0e 5f       	subi	r16, 0xFE	; 254
 4ac:	1f 4f       	sbci	r17, 0xFF	; 255
 4ae:	4f e6       	ldi	r20, 0x6F	; 111
 4b0:	b4 2e       	mov	r11, r20
 4b2:	b2 22       	and	r11, r18
 4b4:	97 ff       	sbrs	r25, 7
 4b6:	09 c0       	rjmp	.+18     	; 0x4ca <vfprintf+0x20a>
 4b8:	90 95       	com	r25
 4ba:	80 95       	com	r24
 4bc:	70 95       	com	r23
 4be:	61 95       	neg	r22
 4c0:	7f 4f       	sbci	r23, 0xFF	; 255
 4c2:	8f 4f       	sbci	r24, 0xFF	; 255
 4c4:	9f 4f       	sbci	r25, 0xFF	; 255
 4c6:	f0 e8       	ldi	r31, 0x80	; 128
 4c8:	bf 2a       	or	r11, r31
 4ca:	2a e0       	ldi	r18, 0x0A	; 10
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	a4 01       	movw	r20, r8
 4d0:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__ultoa_invert>
 4d4:	a8 2e       	mov	r10, r24
 4d6:	a8 18       	sub	r10, r8
 4d8:	43 c0       	rjmp	.+134    	; 0x560 <vfprintf+0x2a0>
 4da:	85 37       	cpi	r24, 0x75	; 117
 4dc:	31 f4       	brne	.+12     	; 0x4ea <vfprintf+0x22a>
 4de:	3f ee       	ldi	r19, 0xEF	; 239
 4e0:	b3 2e       	mov	r11, r19
 4e2:	b2 22       	and	r11, r18
 4e4:	2a e0       	ldi	r18, 0x0A	; 10
 4e6:	30 e0       	ldi	r19, 0x00	; 0
 4e8:	24 c0       	rjmp	.+72     	; 0x532 <vfprintf+0x272>
 4ea:	99 ef       	ldi	r25, 0xF9	; 249
 4ec:	b9 2e       	mov	r11, r25
 4ee:	b2 22       	and	r11, r18
 4f0:	8f 36       	cpi	r24, 0x6F	; 111
 4f2:	b9 f0       	breq	.+46     	; 0x522 <vfprintf+0x262>
 4f4:	20 f4       	brcc	.+8      	; 0x4fe <vfprintf+0x23e>
 4f6:	88 35       	cpi	r24, 0x58	; 88
 4f8:	09 f0       	breq	.+2      	; 0x4fc <vfprintf+0x23c>
 4fa:	b3 c0       	rjmp	.+358    	; 0x662 <vfprintf+0x3a2>
 4fc:	0d c0       	rjmp	.+26     	; 0x518 <vfprintf+0x258>
 4fe:	80 37       	cpi	r24, 0x70	; 112
 500:	21 f0       	breq	.+8      	; 0x50a <vfprintf+0x24a>
 502:	88 37       	cpi	r24, 0x78	; 120
 504:	09 f0       	breq	.+2      	; 0x508 <vfprintf+0x248>
 506:	ad c0       	rjmp	.+346    	; 0x662 <vfprintf+0x3a2>
 508:	02 c0       	rjmp	.+4      	; 0x50e <vfprintf+0x24e>
 50a:	20 e1       	ldi	r18, 0x10	; 16
 50c:	b2 2a       	or	r11, r18
 50e:	b4 fe       	sbrs	r11, 4
 510:	0b c0       	rjmp	.+22     	; 0x528 <vfprintf+0x268>
 512:	84 e0       	ldi	r24, 0x04	; 4
 514:	b8 2a       	or	r11, r24
 516:	08 c0       	rjmp	.+16     	; 0x528 <vfprintf+0x268>
 518:	24 ff       	sbrs	r18, 4
 51a:	09 c0       	rjmp	.+18     	; 0x52e <vfprintf+0x26e>
 51c:	e6 e0       	ldi	r30, 0x06	; 6
 51e:	be 2a       	or	r11, r30
 520:	06 c0       	rjmp	.+12     	; 0x52e <vfprintf+0x26e>
 522:	28 e0       	ldi	r18, 0x08	; 8
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	05 c0       	rjmp	.+10     	; 0x532 <vfprintf+0x272>
 528:	20 e1       	ldi	r18, 0x10	; 16
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	02 c0       	rjmp	.+4      	; 0x532 <vfprintf+0x272>
 52e:	20 e1       	ldi	r18, 0x10	; 16
 530:	32 e0       	ldi	r19, 0x02	; 2
 532:	f8 01       	movw	r30, r16
 534:	b7 fe       	sbrs	r11, 7
 536:	07 c0       	rjmp	.+14     	; 0x546 <vfprintf+0x286>
 538:	60 81       	ld	r22, Z
 53a:	71 81       	ldd	r23, Z+1	; 0x01
 53c:	82 81       	ldd	r24, Z+2	; 0x02
 53e:	93 81       	ldd	r25, Z+3	; 0x03
 540:	0c 5f       	subi	r16, 0xFC	; 252
 542:	1f 4f       	sbci	r17, 0xFF	; 255
 544:	06 c0       	rjmp	.+12     	; 0x552 <vfprintf+0x292>
 546:	60 81       	ld	r22, Z
 548:	71 81       	ldd	r23, Z+1	; 0x01
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 5f       	subi	r16, 0xFE	; 254
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	a4 01       	movw	r20, r8
 554:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__ultoa_invert>
 558:	a8 2e       	mov	r10, r24
 55a:	a8 18       	sub	r10, r8
 55c:	ff e7       	ldi	r31, 0x7F	; 127
 55e:	bf 22       	and	r11, r31
 560:	b6 fe       	sbrs	r11, 6
 562:	0b c0       	rjmp	.+22     	; 0x57a <vfprintf+0x2ba>
 564:	2b 2d       	mov	r18, r11
 566:	2e 7f       	andi	r18, 0xFE	; 254
 568:	a5 14       	cp	r10, r5
 56a:	50 f4       	brcc	.+20     	; 0x580 <vfprintf+0x2c0>
 56c:	b4 fe       	sbrs	r11, 4
 56e:	0a c0       	rjmp	.+20     	; 0x584 <vfprintf+0x2c4>
 570:	b2 fc       	sbrc	r11, 2
 572:	08 c0       	rjmp	.+16     	; 0x584 <vfprintf+0x2c4>
 574:	2b 2d       	mov	r18, r11
 576:	2e 7e       	andi	r18, 0xEE	; 238
 578:	05 c0       	rjmp	.+10     	; 0x584 <vfprintf+0x2c4>
 57a:	7a 2c       	mov	r7, r10
 57c:	2b 2d       	mov	r18, r11
 57e:	03 c0       	rjmp	.+6      	; 0x586 <vfprintf+0x2c6>
 580:	7a 2c       	mov	r7, r10
 582:	01 c0       	rjmp	.+2      	; 0x586 <vfprintf+0x2c6>
 584:	75 2c       	mov	r7, r5
 586:	24 ff       	sbrs	r18, 4
 588:	0d c0       	rjmp	.+26     	; 0x5a4 <vfprintf+0x2e4>
 58a:	fe 01       	movw	r30, r28
 58c:	ea 0d       	add	r30, r10
 58e:	f1 1d       	adc	r31, r1
 590:	80 81       	ld	r24, Z
 592:	80 33       	cpi	r24, 0x30	; 48
 594:	11 f4       	brne	.+4      	; 0x59a <vfprintf+0x2da>
 596:	29 7e       	andi	r18, 0xE9	; 233
 598:	09 c0       	rjmp	.+18     	; 0x5ac <vfprintf+0x2ec>
 59a:	22 ff       	sbrs	r18, 2
 59c:	06 c0       	rjmp	.+12     	; 0x5aa <vfprintf+0x2ea>
 59e:	73 94       	inc	r7
 5a0:	73 94       	inc	r7
 5a2:	04 c0       	rjmp	.+8      	; 0x5ac <vfprintf+0x2ec>
 5a4:	82 2f       	mov	r24, r18
 5a6:	86 78       	andi	r24, 0x86	; 134
 5a8:	09 f0       	breq	.+2      	; 0x5ac <vfprintf+0x2ec>
 5aa:	73 94       	inc	r7
 5ac:	23 fd       	sbrc	r18, 3
 5ae:	14 c0       	rjmp	.+40     	; 0x5d8 <vfprintf+0x318>
 5b0:	20 ff       	sbrs	r18, 0
 5b2:	0f c0       	rjmp	.+30     	; 0x5d2 <vfprintf+0x312>
 5b4:	5a 2c       	mov	r5, r10
 5b6:	73 14       	cp	r7, r3
 5b8:	60 f4       	brcc	.+24     	; 0x5d2 <vfprintf+0x312>
 5ba:	53 0c       	add	r5, r3
 5bc:	57 18       	sub	r5, r7
 5be:	73 2c       	mov	r7, r3
 5c0:	08 c0       	rjmp	.+16     	; 0x5d2 <vfprintf+0x312>
 5c2:	b7 01       	movw	r22, r14
 5c4:	80 e2       	ldi	r24, 0x20	; 32
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	2c 87       	std	Y+12, r18	; 0x0c
 5ca:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 5ce:	73 94       	inc	r7
 5d0:	2c 85       	ldd	r18, Y+12	; 0x0c
 5d2:	73 14       	cp	r7, r3
 5d4:	b0 f3       	brcs	.-20     	; 0x5c2 <vfprintf+0x302>
 5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <vfprintf+0x320>
 5d8:	73 14       	cp	r7, r3
 5da:	10 f4       	brcc	.+4      	; 0x5e0 <vfprintf+0x320>
 5dc:	37 18       	sub	r3, r7
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <vfprintf+0x322>
 5e0:	31 2c       	mov	r3, r1
 5e2:	24 ff       	sbrs	r18, 4
 5e4:	12 c0       	rjmp	.+36     	; 0x60a <vfprintf+0x34a>
 5e6:	b7 01       	movw	r22, r14
 5e8:	80 e3       	ldi	r24, 0x30	; 48
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	2c 87       	std	Y+12, r18	; 0x0c
 5ee:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 5f2:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f4:	22 ff       	sbrs	r18, 2
 5f6:	1e c0       	rjmp	.+60     	; 0x634 <vfprintf+0x374>
 5f8:	21 ff       	sbrs	r18, 1
 5fa:	03 c0       	rjmp	.+6      	; 0x602 <vfprintf+0x342>
 5fc:	88 e5       	ldi	r24, 0x58	; 88
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	02 c0       	rjmp	.+4      	; 0x606 <vfprintf+0x346>
 602:	88 e7       	ldi	r24, 0x78	; 120
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	b7 01       	movw	r22, r14
 608:	0c c0       	rjmp	.+24     	; 0x622 <vfprintf+0x362>
 60a:	82 2f       	mov	r24, r18
 60c:	86 78       	andi	r24, 0x86	; 134
 60e:	91 f0       	breq	.+36     	; 0x634 <vfprintf+0x374>
 610:	21 fd       	sbrc	r18, 1
 612:	02 c0       	rjmp	.+4      	; 0x618 <vfprintf+0x358>
 614:	80 e2       	ldi	r24, 0x20	; 32
 616:	01 c0       	rjmp	.+2      	; 0x61a <vfprintf+0x35a>
 618:	8b e2       	ldi	r24, 0x2B	; 43
 61a:	27 fd       	sbrc	r18, 7
 61c:	8d e2       	ldi	r24, 0x2D	; 45
 61e:	b7 01       	movw	r22, r14
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 626:	06 c0       	rjmp	.+12     	; 0x634 <vfprintf+0x374>
 628:	b7 01       	movw	r22, r14
 62a:	80 e3       	ldi	r24, 0x30	; 48
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 632:	5a 94       	dec	r5
 634:	a5 14       	cp	r10, r5
 636:	c0 f3       	brcs	.-16     	; 0x628 <vfprintf+0x368>
 638:	aa 94       	dec	r10
 63a:	f4 01       	movw	r30, r8
 63c:	ea 0d       	add	r30, r10
 63e:	f1 1d       	adc	r31, r1
 640:	b7 01       	movw	r22, r14
 642:	80 81       	ld	r24, Z
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 64a:	a1 10       	cpse	r10, r1
 64c:	f5 cf       	rjmp	.-22     	; 0x638 <vfprintf+0x378>
 64e:	06 c0       	rjmp	.+12     	; 0x65c <vfprintf+0x39c>
 650:	b7 01       	movw	r22, r14
 652:	80 e2       	ldi	r24, 0x20	; 32
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 65a:	3a 94       	dec	r3
 65c:	31 10       	cpse	r3, r1
 65e:	f8 cf       	rjmp	.-16     	; 0x650 <vfprintf+0x390>
 660:	43 ce       	rjmp	.-890    	; 0x2e8 <vfprintf+0x28>
 662:	f7 01       	movw	r30, r14
 664:	26 81       	ldd	r18, Z+6	; 0x06
 666:	37 81       	ldd	r19, Z+7	; 0x07
 668:	02 c0       	rjmp	.+4      	; 0x66e <vfprintf+0x3ae>
 66a:	2f ef       	ldi	r18, 0xFF	; 255
 66c:	3f ef       	ldi	r19, 0xFF	; 255
 66e:	c9 01       	movw	r24, r18
 670:	2c 96       	adiw	r28, 0x0c	; 12
 672:	e2 e1       	ldi	r30, 0x12	; 18
 674:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__epilogue_restores__>

00000678 <strnlen_P>:
 678:	fc 01       	movw	r30, r24
 67a:	05 90       	lpm	r0, Z+
 67c:	61 50       	subi	r22, 0x01	; 1
 67e:	70 40       	sbci	r23, 0x00	; 0
 680:	01 10       	cpse	r0, r1
 682:	d8 f7       	brcc	.-10     	; 0x67a <strnlen_P+0x2>
 684:	80 95       	com	r24
 686:	90 95       	com	r25
 688:	8e 0f       	add	r24, r30
 68a:	9f 1f       	adc	r25, r31
 68c:	08 95       	ret

0000068e <strnlen>:
 68e:	fc 01       	movw	r30, r24
 690:	61 50       	subi	r22, 0x01	; 1
 692:	70 40       	sbci	r23, 0x00	; 0
 694:	01 90       	ld	r0, Z+
 696:	01 10       	cpse	r0, r1
 698:	d8 f7       	brcc	.-10     	; 0x690 <strnlen+0x2>
 69a:	80 95       	com	r24
 69c:	90 95       	com	r25
 69e:	8e 0f       	add	r24, r30
 6a0:	9f 1f       	adc	r25, r31
 6a2:	08 95       	ret

000006a4 <fputc>:
 6a4:	0f 93       	push	r16
 6a6:	1f 93       	push	r17
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	8c 01       	movw	r16, r24
 6ae:	eb 01       	movw	r28, r22
 6b0:	8b 81       	ldd	r24, Y+3	; 0x03
 6b2:	81 fd       	sbrc	r24, 1
 6b4:	03 c0       	rjmp	.+6      	; 0x6bc <fputc+0x18>
 6b6:	0f ef       	ldi	r16, 0xFF	; 255
 6b8:	1f ef       	ldi	r17, 0xFF	; 255
 6ba:	1a c0       	rjmp	.+52     	; 0x6f0 <fputc+0x4c>
 6bc:	82 ff       	sbrs	r24, 2
 6be:	0d c0       	rjmp	.+26     	; 0x6da <fputc+0x36>
 6c0:	2e 81       	ldd	r18, Y+6	; 0x06
 6c2:	3f 81       	ldd	r19, Y+7	; 0x07
 6c4:	8c 81       	ldd	r24, Y+4	; 0x04
 6c6:	9d 81       	ldd	r25, Y+5	; 0x05
 6c8:	28 17       	cp	r18, r24
 6ca:	39 07       	cpc	r19, r25
 6cc:	64 f4       	brge	.+24     	; 0x6e6 <fputc+0x42>
 6ce:	e8 81       	ld	r30, Y
 6d0:	f9 81       	ldd	r31, Y+1	; 0x01
 6d2:	01 93       	st	Z+, r16
 6d4:	f9 83       	std	Y+1, r31	; 0x01
 6d6:	e8 83       	st	Y, r30
 6d8:	06 c0       	rjmp	.+12     	; 0x6e6 <fputc+0x42>
 6da:	e8 85       	ldd	r30, Y+8	; 0x08
 6dc:	f9 85       	ldd	r31, Y+9	; 0x09
 6de:	80 2f       	mov	r24, r16
 6e0:	09 95       	icall
 6e2:	89 2b       	or	r24, r25
 6e4:	41 f7       	brne	.-48     	; 0x6b6 <fputc+0x12>
 6e6:	8e 81       	ldd	r24, Y+6	; 0x06
 6e8:	9f 81       	ldd	r25, Y+7	; 0x07
 6ea:	01 96       	adiw	r24, 0x01	; 1
 6ec:	9f 83       	std	Y+7, r25	; 0x07
 6ee:	8e 83       	std	Y+6, r24	; 0x06
 6f0:	c8 01       	movw	r24, r16
 6f2:	df 91       	pop	r29
 6f4:	cf 91       	pop	r28
 6f6:	1f 91       	pop	r17
 6f8:	0f 91       	pop	r16
 6fa:	08 95       	ret

000006fc <__ultoa_invert>:
 6fc:	fa 01       	movw	r30, r20
 6fe:	aa 27       	eor	r26, r26
 700:	28 30       	cpi	r18, 0x08	; 8
 702:	51 f1       	breq	.+84     	; 0x758 <__ultoa_invert+0x5c>
 704:	20 31       	cpi	r18, 0x10	; 16
 706:	81 f1       	breq	.+96     	; 0x768 <__ultoa_invert+0x6c>
 708:	e8 94       	clt
 70a:	6f 93       	push	r22
 70c:	6e 7f       	andi	r22, 0xFE	; 254
 70e:	6e 5f       	subi	r22, 0xFE	; 254
 710:	7f 4f       	sbci	r23, 0xFF	; 255
 712:	8f 4f       	sbci	r24, 0xFF	; 255
 714:	9f 4f       	sbci	r25, 0xFF	; 255
 716:	af 4f       	sbci	r26, 0xFF	; 255
 718:	b1 e0       	ldi	r27, 0x01	; 1
 71a:	3e d0       	rcall	.+124    	; 0x798 <__ultoa_invert+0x9c>
 71c:	b4 e0       	ldi	r27, 0x04	; 4
 71e:	3c d0       	rcall	.+120    	; 0x798 <__ultoa_invert+0x9c>
 720:	67 0f       	add	r22, r23
 722:	78 1f       	adc	r23, r24
 724:	89 1f       	adc	r24, r25
 726:	9a 1f       	adc	r25, r26
 728:	a1 1d       	adc	r26, r1
 72a:	68 0f       	add	r22, r24
 72c:	79 1f       	adc	r23, r25
 72e:	8a 1f       	adc	r24, r26
 730:	91 1d       	adc	r25, r1
 732:	a1 1d       	adc	r26, r1
 734:	6a 0f       	add	r22, r26
 736:	71 1d       	adc	r23, r1
 738:	81 1d       	adc	r24, r1
 73a:	91 1d       	adc	r25, r1
 73c:	a1 1d       	adc	r26, r1
 73e:	20 d0       	rcall	.+64     	; 0x780 <__ultoa_invert+0x84>
 740:	09 f4       	brne	.+2      	; 0x744 <__ultoa_invert+0x48>
 742:	68 94       	set
 744:	3f 91       	pop	r19
 746:	2a e0       	ldi	r18, 0x0A	; 10
 748:	26 9f       	mul	r18, r22
 74a:	11 24       	eor	r1, r1
 74c:	30 19       	sub	r19, r0
 74e:	30 5d       	subi	r19, 0xD0	; 208
 750:	31 93       	st	Z+, r19
 752:	de f6       	brtc	.-74     	; 0x70a <__ultoa_invert+0xe>
 754:	cf 01       	movw	r24, r30
 756:	08 95       	ret
 758:	46 2f       	mov	r20, r22
 75a:	47 70       	andi	r20, 0x07	; 7
 75c:	40 5d       	subi	r20, 0xD0	; 208
 75e:	41 93       	st	Z+, r20
 760:	b3 e0       	ldi	r27, 0x03	; 3
 762:	0f d0       	rcall	.+30     	; 0x782 <__ultoa_invert+0x86>
 764:	c9 f7       	brne	.-14     	; 0x758 <__ultoa_invert+0x5c>
 766:	f6 cf       	rjmp	.-20     	; 0x754 <__ultoa_invert+0x58>
 768:	46 2f       	mov	r20, r22
 76a:	4f 70       	andi	r20, 0x0F	; 15
 76c:	40 5d       	subi	r20, 0xD0	; 208
 76e:	4a 33       	cpi	r20, 0x3A	; 58
 770:	18 f0       	brcs	.+6      	; 0x778 <__ultoa_invert+0x7c>
 772:	49 5d       	subi	r20, 0xD9	; 217
 774:	31 fd       	sbrc	r19, 1
 776:	40 52       	subi	r20, 0x20	; 32
 778:	41 93       	st	Z+, r20
 77a:	02 d0       	rcall	.+4      	; 0x780 <__ultoa_invert+0x84>
 77c:	a9 f7       	brne	.-22     	; 0x768 <__ultoa_invert+0x6c>
 77e:	ea cf       	rjmp	.-44     	; 0x754 <__ultoa_invert+0x58>
 780:	b4 e0       	ldi	r27, 0x04	; 4
 782:	a6 95       	lsr	r26
 784:	97 95       	ror	r25
 786:	87 95       	ror	r24
 788:	77 95       	ror	r23
 78a:	67 95       	ror	r22
 78c:	ba 95       	dec	r27
 78e:	c9 f7       	brne	.-14     	; 0x782 <__ultoa_invert+0x86>
 790:	00 97       	sbiw	r24, 0x00	; 0
 792:	61 05       	cpc	r22, r1
 794:	71 05       	cpc	r23, r1
 796:	08 95       	ret
 798:	9b 01       	movw	r18, r22
 79a:	ac 01       	movw	r20, r24
 79c:	0a 2e       	mov	r0, r26
 79e:	06 94       	lsr	r0
 7a0:	57 95       	ror	r21
 7a2:	47 95       	ror	r20
 7a4:	37 95       	ror	r19
 7a6:	27 95       	ror	r18
 7a8:	ba 95       	dec	r27
 7aa:	c9 f7       	brne	.-14     	; 0x79e <__ultoa_invert+0xa2>
 7ac:	62 0f       	add	r22, r18
 7ae:	73 1f       	adc	r23, r19
 7b0:	84 1f       	adc	r24, r20
 7b2:	95 1f       	adc	r25, r21
 7b4:	a0 1d       	adc	r26, r0
 7b6:	08 95       	ret

000007b8 <__prologue_saves__>:
 7b8:	2f 92       	push	r2
 7ba:	3f 92       	push	r3
 7bc:	4f 92       	push	r4
 7be:	5f 92       	push	r5
 7c0:	6f 92       	push	r6
 7c2:	7f 92       	push	r7
 7c4:	8f 92       	push	r8
 7c6:	9f 92       	push	r9
 7c8:	af 92       	push	r10
 7ca:	bf 92       	push	r11
 7cc:	cf 92       	push	r12
 7ce:	df 92       	push	r13
 7d0:	ef 92       	push	r14
 7d2:	ff 92       	push	r15
 7d4:	0f 93       	push	r16
 7d6:	1f 93       	push	r17
 7d8:	cf 93       	push	r28
 7da:	df 93       	push	r29
 7dc:	cd b7       	in	r28, 0x3d	; 61
 7de:	de b7       	in	r29, 0x3e	; 62
 7e0:	ca 1b       	sub	r28, r26
 7e2:	db 0b       	sbc	r29, r27
 7e4:	0f b6       	in	r0, 0x3f	; 63
 7e6:	f8 94       	cli
 7e8:	de bf       	out	0x3e, r29	; 62
 7ea:	0f be       	out	0x3f, r0	; 63
 7ec:	cd bf       	out	0x3d, r28	; 61
 7ee:	09 94       	ijmp

000007f0 <__epilogue_restores__>:
 7f0:	2a 88       	ldd	r2, Y+18	; 0x12
 7f2:	39 88       	ldd	r3, Y+17	; 0x11
 7f4:	48 88       	ldd	r4, Y+16	; 0x10
 7f6:	5f 84       	ldd	r5, Y+15	; 0x0f
 7f8:	6e 84       	ldd	r6, Y+14	; 0x0e
 7fa:	7d 84       	ldd	r7, Y+13	; 0x0d
 7fc:	8c 84       	ldd	r8, Y+12	; 0x0c
 7fe:	9b 84       	ldd	r9, Y+11	; 0x0b
 800:	aa 84       	ldd	r10, Y+10	; 0x0a
 802:	b9 84       	ldd	r11, Y+9	; 0x09
 804:	c8 84       	ldd	r12, Y+8	; 0x08
 806:	df 80       	ldd	r13, Y+7	; 0x07
 808:	ee 80       	ldd	r14, Y+6	; 0x06
 80a:	fd 80       	ldd	r15, Y+5	; 0x05
 80c:	0c 81       	ldd	r16, Y+4	; 0x04
 80e:	1b 81       	ldd	r17, Y+3	; 0x03
 810:	aa 81       	ldd	r26, Y+2	; 0x02
 812:	b9 81       	ldd	r27, Y+1	; 0x01
 814:	ce 0f       	add	r28, r30
 816:	d1 1d       	adc	r29, r1
 818:	0f b6       	in	r0, 0x3f	; 63
 81a:	f8 94       	cli
 81c:	de bf       	out	0x3e, r29	; 62
 81e:	0f be       	out	0x3f, r0	; 63
 820:	cd bf       	out	0x3d, r28	; 61
 822:	ed 01       	movw	r28, r26
 824:	08 95       	ret

00000826 <_exit>:
 826:	f8 94       	cli

00000828 <__stop_program>:
 828:	ff cf       	rjmp	.-2      	; 0x828 <__stop_program>
